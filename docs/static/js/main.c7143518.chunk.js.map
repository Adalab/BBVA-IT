{"version":3,"sources":["data/serviceCurrentWeather.js","data/serviceForecastWeather.js","components/CityButton.js","components/InfoWeather.js","components/WeatherIcon.js","components/WeatherCard.js","components/WeatherListItem.js","components/WeatherList.js","WeatherWidget.js","index.js"],"names":["formatData","data","convertTemp","temp","parseInt","icon","weather","slice","country","sys","city","name","main","max","temp_max","min","temp_min","humidity","wind","speed","module","exports","getCurrentWeather","endpoint","fetch","then","response","json","number","getMax","arr","reduce","acc","curr","getMin","getIcon","iconArr","i","length","count","f","mostRepeated","repeated","push","getWeekDay","date","Date","getDay","days","day","dt_txt","selectData","index","list","findIndex","element","getDay2","split","day2","day3","day4","getForecastWeather","getCityId","CityButton","props","currentCity","changeCity","className","onClick","InfoWeather","currentWeather","Cloudy","icons","WeatherIcon","WeatherCard","WeatherListItem","card","WeatherList","forecastWeather","map","key","require","WeatherWidget","state","bind","this","setState","componentDidMount","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7143518.chunk.js","sourcesContent":["const getCurrentWeather = city => {\n  const getCityId = () => {\n    if (city === \"Madrid\") {\n      return \"3117735\";\n    } else if (city === \"Barcelona\") {\n      return \"3128760\";\n    }\n  };\n\n  const endpoint = `http://api.openweathermap.org/data/2.5/weather?id=${getCityId(\n    city\n  )}&APPID=0c63c7586eaed6d88005102690c6ec7b`;\n\n  return fetch(endpoint)\n    .then(response => response.json())\n    .then(data => {\n      return data;\n    })\n    .then(data => formatData(data));\n};\n\n\nconst formatData = data => {\n  const convertTemp = temp => parseInt(temp - 273.15);\n  const icon = data.weather[0].icon.slice(0,2)\n  return {\n    country: data.sys.country,\n    city: data.name,\n    temp: convertTemp(data.main.temp),\n    max: convertTemp(data.main.temp_max),\n    min: convertTemp(data.main.temp_min),\n    humidity: data.main.humidity,\n    icon: icon,\n    wind: data.wind.speed\n  };\n};\n\nmodule.exports = { formatData, getCurrentWeather };\n","const getCityId = city => {\n  if (city === \"Madrid\") {\n    return \"3117735\";\n  } else if (city === \"Barcelona\") {\n    return \"3128760\";\n  }\n};\n\nconst getForecastWeather = city => {\n  const endpoint = `http://api.openweathermap.org/data/2.5/forecast?id=${getCityId(\n    city\n  )}&APPID=0c63c7586eaed6d88005102690c6ec7b`;\n\n  return fetch(endpoint)\n    .then(response => response.json())\n    .then(data => formatData(data));\n};\n\nconst convertTemp = number => parseInt(number - 273.15);\n\nconst getMax = arr => {\n  const max = arr.reduce((acc, curr) =>\n    curr.main.temp > acc.main.temp ? curr : acc\n  ).main.temp;\n  return convertTemp(max);\n};\n\nconst getMin = arr => {\n  // console.log(arr)\n  const min = arr.reduce((acc, curr) => {\n    // console.log('acc', acc)\n    // console.log('curr', curr)\n    return curr.main.temp < acc.main.temp ? curr : acc;\n  }).main.temp;\n  return convertTemp(min);\n};\n\nconst getIcon = arr => {\n  const iconArr = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    let icon = arr[i].weather[0].icon;\n    let count = 0;\n\n    for (let f = 0; f < arr.length; f++) {\n      if (arr[f].weather[0].icon === icon) {\n        count += 1;\n      }\n    }\n\n    let mostRepeated = { icon: icon, repeated: count };\n\n    iconArr.push(mostRepeated);\n  }\n  let mostRepeated = iconArr.reduce((acc, curr) =>\n    acc.repeated > curr.repeated ? acc : curr\n  );\n\n  mostRepeated = mostRepeated.icon.slice(0, 2);\n  return mostRepeated;\n};\n\nconst getWeekDay = date => {\n  const weekDays = [\n    \"Domingo\",\n    \"Lunes\",\n    \"Martes\",\n    \"Miércoles\",\n    \"Jueves\",\n    \"Viernes\",\n    \"Sábado\"\n  ];\n  \n  date = new Date(date);\n  date = date.getDay();\n  return weekDays[date];\n};\n\nconst days = day => {\n  return {\n    max: getMax(day),\n    min: getMin(day),\n    icon: getIcon(day),\n    day: getWeekDay(day[0].dt_txt)\n  };\n};\n\nconst selectData = data => {\n  const arr = data.list;\n  const index = arr.findIndex(\n    element => getDay2(element.dt_txt) === \"00:00:00\"\n  );\n  return data.list.slice(index);\n};\n\nconst getDay2 = date => {\n  let hour = date.split(\" \")[1];\n  return hour;\n};\n\nconst formatData = data => {\n  let arr = selectData(data);\n  let day2 = arr.slice(0, 8);\n  let day3 = arr.slice(8, 16);\n  let day4 = arr.slice(16, 24);\n\n  return [days(day2), days(day3), days(day4)];\n};\n\nmodule.exports = {\n  getForecastWeather,\n  formatData,\n  selectData,\n  convertTemp,\n  getMax,\n  getMin,\n  getIcon,\n  getWeekDay,\n  getDay2\n};\n","import React from \"react\";\nimport \"../stylesheets/components/_citybutton.scss\";\n\nconst CityButton = props => {\n  const { currentCity, changeCity } = props;\n  const handleClick = () => {\n    changeCity(currentCity === \"Madrid\" ? \"Barcelona\" : \"Madrid\");\n  };\n  return (\n    <button className=\"city--button\" onClick={handleClick}>\n      {currentCity === \"Madrid\" ? \"Barcelona\" : \"Madrid\"}\n    </button>\n  );\n};\n\nexport default CityButton;\n","import React from \"react\";\n\nconst InfoWeather = props => {\n  const { currentWeather } = props;\n  return (\n    <section className=\"current--info\">\n      <p className=\"current--max\">{currentWeather.max}º </p>\n      <p className=\"current--min\"> {currentWeather.min}º</p>\n      <p className=\"current--humidity\">Humidity: {currentWeather.humidity}</p>\n    </section>\n  );\n};\n\nexport default InfoWeather;\n","import React from \"react\";\n\nconst Cloudy = () => {\n  return (\n    <div className=\"icon cloudy\">\n      <div className=\"cloud\"></div>\n      <div className=\"cloud\"></div>\n    </div>\n  );\n};\n\nconst Flurries = () => {\n  return (\n    <div className=\"icon flurries\">\n      <div className=\"cloud\"></div>\n      <div className=\"snow\">\n        <div className=\"flake\"></div>\n        <div className=\"flake\"></div>\n      </div>\n    </div>\n  );\n};\n\nconst Rainy = () => {\n  return (\n    <div className=\"icon rainy\">\n      <div className=\"cloud\"></div>\n      <div className=\"rain\"></div>\n    </div>\n  );\n};\n\nconst Sunny = () => {\n  return (\n    <div className=\"icon sunny\">\n    <div className=\"sun\">\n      <div className=\"rays\"></div>\n    </div>\n  </div>\n  );\n};\n\nconst SunShower = () => {\n  return (\n    <div className=\"icon sun-shower\">\n      <div className=\"cloud\"></div>\n      <div className=\"sun\">\n        <div className=\"rays\"></div>\n      </div>\n      <div className=\"rain\"></div>\n    </div>\n  );\n};\n\nconst ThunderStorm = () => {\n  return (\n    <div className=\"icon thunder-storm\">\n      <div className=\"cloud\"></div>\n      <div className=\"lightning\">\n        <div className=\"bolt\"></div>\n        <div className=\"bolt\"></div>\n      </div>\n    </div>\n  );\n};\n\nconst icons = { \n  '02': <Cloudy/>,\n  '03': <Cloudy/>,\n  '04': <Cloudy/>,\n  '50': <Cloudy/>,\n  '11': <ThunderStorm/>,\n  '13': <Flurries/>,\n  '10': <SunShower/>,\n  '09': <Rainy/>,\n  '01': <Sunny/>,\n};\n\nconst getIcon = icon => {\n  return icons[icon]\n}\n\nconst WeatherIcon = props => {\n  return(\n    <div>\n      {getIcon(props.icon)}\n    </div>\n  )\n}\n\nexport default WeatherIcon;\n","import React from \"react\";\nimport CityButton from \"./CityButton\";\nimport InfoWeather from \"./InfoWeather\";\nimport \"../stylesheets/layout/_weathercard.scss\";\nimport WeatherIcon from \"./WeatherIcon\";\n\nconst WeatherCard = props => {\n  const { currentWeather, currentCity, changeCity } = props;\n  return (\n    <section className=\"current__weather\">\n      <div className=\"temperature--content\">\n        <h2 className=\"current--temp\">{currentWeather.temp}º</h2>\n        <div className=\"city--content\">\n          <h3 className=\"title--city\">{currentCity}</h3>\n          <span className=\"line\"></span>\n          <CityButton\n            className=\"city--button\"\n            currentCity={currentCity}\n            changeCity={changeCity}\n          />\n        </div>\n        <p className=\"current--day\">Hoy</p>\n        <InfoWeather currentWeather={currentWeather} />\n      </div>\n      <WeatherIcon icon={currentWeather.icon}/>\n      {/* <div className=\"icon--content\">\n        <div class=\"icon sun-shower\">\n          <div class=\"cloud\"></div>\n          <div class=\"sun\">\n            <div class=\"rays\"></div>\n          </div>\n          <div class=\"rain\"></div>\n        </div>\n      </div> */}\n    </section>\n  );\n};\n\nexport default WeatherCard;\n","import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"../stylesheets/layout/_weatherListItem.scss\";\n\nconst WeatherListItem = props => {\n  const { day, max, min, icon } = props.card;\n  return (\n    <div className=\"weather--list-item\">\n      <WeatherIcon icon={icon} />\n      <div className=\"weather--list-info\">\n        <p className=\"weather--list-info-day\">{day}</p>\n        <div className=\"weather--list-temp\">\n          <p className=\"weather--list-info-max\">{max}º </p>\n          <p className=\"weather--list-info-min\"> {min}º</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherListItem;\n","import React from \"react\";\nimport WeatherListItem from \"./WeatherListItem\";\n\nconst WeatherList = props => {\n  const renderList = () => {\n    return props.forecastWeather.map((card, index) => {\n      return (\n        <li key={index} className=\"weather--list-li\">\n          <WeatherListItem card={card} />\n        </li>\n      );\n    });\n  };\n  return <ul className=\"weather--list\">{renderList()}</ul>;\n};\n\nexport default WeatherList;\n","import React from \"react\";\nimport \"./stylesheets/WeatherWidget.scss\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport InfoWeather from \"./components/InfoWeather\";\nimport Header from \"./components/Header\";\nimport WeatherList from \"./components/WeatherList\";\nconst getCurrentWeather = require(\"./data/serviceCurrentWeather\")\n  .getCurrentWeather;\nconst getForecastWeather = require(\"./data/serviceForecastWeather\")\n  .getForecastWeather;\n\nclass WeatherWidget extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentCity: \"Madrid\",\n      currentWeather: {},\n      forecastWeather: []\n    };\n    this.changeCity = this.changeCity.bind(this);\n  }\n\n  componentDidMount() {\n    getCurrentWeather(this.state.currentCity).then(currentWeather =>\n      this.setState({ currentWeather })\n    );\n    getForecastWeather(this.state.currentCity).then(forecastWeather =>\n      this.setState({ forecastWeather })\n    );\n  }\n\n  changeCity(currentCity) {\n    this.setState({ currentCity }, this.componentDidMount);\n  }\n\n  render() {\n    const { currentWeather, currentCity, forecastWeather } = this.state;\n    return (\n      <div className=\"weather--widget\">\n        <main className=\"main--weather-widget\">\n          <WeatherCard\n            currentCity={currentCity}\n            changeCity={this.changeCity}\n            currentWeather={currentWeather}\n          />\n          <WeatherList forecastWeather={forecastWeather} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default WeatherWidget;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WeatherWidget from \"./WeatherWidget\";\n\nReactDOM.render(<WeatherWidget />, document.getElementById(\"root\"));\n"],"sourceRoot":""}